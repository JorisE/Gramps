* Allow for multiple notes. A tabbed interface would be really useful,
  since there are no titles for notes. Not all objects would necessarily
  need multiple notes. Determine which ones should and shouldn't.
* Drag and drop inside a gallery to allow for reordering of media objects.
  This would allow for the elimination of the rather lame "Make Primary" 
  option.
* Drag and drop should display the icon we are dragging instead of just
  the default icon.  Nautilus does this very effectively, and GTK has
  support for this.
* Provide an "import" of a gramps package. Not too difficult to do this,
  since there is already a ReadTarFile class which will unpackage the
  file. Needs have an interface built around it.
* Catch uncaught exceptions at the top level, notifiy the user, and 
  store the results in a file that can be emailed. Have the start of
  this with the gramps.err file, but most users don't realize that 
  this file has been created. Some type of notification is needed.
* Allow an image to be dropped onto the image box on the first tab of
  the EditPerson dialog. This would make that image the first in the
  photo list as well.
* Speed up the reading of the database. The python XML routines are not
  as fast as I would like, and it can take a minute or so to read a
  large database. This is way too slow.
* Progress report on the WebPage report generation. I've been told that
  for large databases, this can take up to about 10 minutes. A progress
  bar would give people an indication of where they are in the process,
  and an indication that gramps has not locked up on them.
* GEDCOM import should use the GEDCOM ID values as the GRAMPS ids if the
  current database is empty. This would help us in the future if we want
  to do an incremental update. Having the GEDCOM ID and the gramps ID
  match up would be a good indication that these are the same people.
  For example, @F001@ would become F001.
* Completely revamp the merge utility.
* Finish the generic load of revision control interfaces to allow a
  revision control plugin system. Most of the work is already done.
* Extend the gramps package exporting to export to a ISO-9660 CD-ROM
  image. Thumbnails would need to be exported for this as well, since
  the CD-ROM would be read-only after burning.
* Disable the save buttons if gramps database is marked read-only. Disable 
  the adding of media objects as well, since this will cause gramps to
  try to create a thumbnail in a readonly database.
* Dates do not understand alternate calendars
* OpenOffice zip file is not handled very gracefully.  Uses the "system"
  call to generate the zip file using the hard coded path of /usr/bin/zip. 
  Python 2.0 provides a zip interface, so this may need to hold off until 
  the move is made to Python 2.0.
* Sort all lists
* And a whole lot more....
